databases: &databases # ENGINE: django_prometheus.db.backends.postgresql
  ENGINE: django.db.backends.postgresql
  NAME: blog
  USER: user
  PASSWORD: securepassword
  PORT: 6432
  HOST: pgbouncer
  CONN_MAX_AGE: 0
  CONN_HEALTH_CHECKS: True
  OPTIONS:
    options: '-c jit=off'
    # sslmode: require
    keepalives: 1
    keepalives_idle: 30
    keepalives_interval: 15
    keepalives_count: 5
    pool:
      min_size: 4
      max_size: 8
      max_idle: 120

kibana-logging: &kibana-logging
  LOGGING:
    root:
      handlers:
        - console

test-logger: &test-logger
  LOGGING:
    root:
      handlers:
        - base

storage: &static_storage
  STATIC_STORAGE:
    BACKEND: django.contrib.staticfiles.storage.StaticFilesStorage

celery: &celery
  CELERY_RESULT_BACKEND: redis://localhost:6379
  CELERY_BROKER_URL: redis://localhost:6379
  CELERY_TASK_ALWAYS_EAGER: False
  CELERY_TASK_EAGER_PROPAGATES: False

bucket: &bucket
  GS_BUCKET_NAME: django-cdn
  GS_PROJECT_ID: django-app-431708
  GS_QUERYSTRING_AUTH: False
  USE_GC_LOCAL: False # Use GC bucket locally

default: &default
  SENTRY_ENABLED: False

local:
  <<: [*default, *static_storage, *celery]
  APP_ENV: local
  DEBUG: True
  SECRET_KEY: '@format {env[SECRET_KEY]}'
  ALLOWED_HOSTS: ['*']
  USE_GC_LOCAL: False
  SENTRY_ENABLED: True

  CACHE_BACKEND: django_redis.cache.RedisCache
  REDIS_URL: redis://localhost:6379/0

  # Database
  DATABASES:
    default:
      <<: *databases
    read_replica:
      <<: *databases
      NAME: blog_read_replica

# For Docker environment
development:
  <<: [*static_storage, *celery]
  APP_ENV: development
  DEBUG: False
  ALLOWED_HOSTS: ['*']
  SECRET_KEY: MM5EZ0rZdrsc-TX9vU432Cg-L-lqpjDZ50AICyU9iDBOEOo3BNzl1uxd-Sd9Avrs0u_-Nw
  REDIS_URL: redis://redis:6379/0
  CACHE_BACKEND: django_redis.cache.RedisCache

  CELERY_RESULT_BACKEND: redis://redis-master:6379
  CELERY_BROKER_URL: redis://redis-master:6379

  DATABASES:
    default:
      <<: *databases

test:
  <<: [*static_storage]
  APP_ENV: test
  DEBUG: True
  SECRET_KEY: '@format {env[SECRET_KEY]}'
  USE_GC_LOCAL: False
  COMPRESS_OFFLINE: False
  ALLOWED_HOSTS:
    - '.testserver'
    - testserver
    - localhost

  # Celery
  REDIS_URL: redis://localhost:6379/0
  CELERY_RESULT_BACKEND: 'cache+memory://'
  CELERY_BROKER_URL: 'memory://localhost/'
  CELERY_TASK_ALWAYS_EAGER: True
  CELERY_TASK_EAGER_PROPAGATES: True

  CACHE_BACKEND: 'django.core.cache.backends.dummy.DummyCache'
  CACHES:
    default:
      'BACKEND': 'django.core.cache.backends.dummy.DummyCache'

  # Database
  DATABASES:
    default:
      <<: *databases
      HOST: postgres
      PORT: 5431

production:
  <<: [*default, *bucket]
  APP_ENV: production
  DEBUG: False
  # SENTRY_DSN: '@format {env[SENTRY_DSN]}'
  # SECRET_KEY: '@format {env[SECRET_KEY]}'
  SECRET_KEY: MM5EZ0rZdrsc-TX9vU432Cg-L-lqpjDZ50AICyU9iDBOEOo3BNzl1uxd-Sd9Avrs0u_-Nw
  SECRET_KEY_FALLBACKS: []
  ALLOWED_HOSTS: ['*']

  COMPRESS_OFFLINE: True
  COMPRESS_ENABLED: True

  STORAGES:
    default:
      BACKEND: django.core.files.storage.FileSystemStorage
    staticfiles:
      BACKEND: django.contrib.staticfiles.storage.StaticFilesStorage

  # For Google cloud bucket enable this settings
  # COLLECTFASTA_STRATEGY: 'collectfasta.strategies.gcloud.GoogleCloudStrategy'
  # STORAGES:
  #   staticfiles:
  #     BACKEND: djangoblog.storage.CachedGCloudStorage
  #     OPTIONS:
  #       bucket_name: django-cdn
  #       project_id: django-app-431708
  #       querystring_auth: False

  # COMPRESS_OFFLINE_MANIFEST_STORAGE: djangoblog.storage.CustomOfflineManifestStorage
  # COMPRESS_STORAGE: djangoblog.storage.CachedGCloudStorage
  # COMPRESS_URL: https://storage.googleapis.com/django-cdn/
  # STATIC_URL: https://storage.googleapis.com/django-cdn/

  # Database
  DATABASES:
    default:
      <<: *databases
    read_replica:
      <<: *databases

  # Celery
  CELERY_RESULT_BACKEND: 'redis://redis-master:6379/0'
  CELERY_BROKER_URL: 'redis://redis-master:6379/0'
  CELERY_TASK_ALWAYS_EAGER: False
  CELERY_TASK_EAGER_PROPAGATES: False

  # Redis
  REDIS_URL: redis://redis-master:6379/0
  CACHE_BACKEND: django_redis.cache.RedisCache
