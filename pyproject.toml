[project]
name = "blog-application"
version = "0.1.0"
description = "Django blog"
requires-python = ">=3.12,<4.0.0"
authors = [
    { name = "Viktor Sokolov", email = "viktorsokolov.and@gmail.com" },
]
dependencies = [
    "celery ~=5.4",
    "dependency-injector ~=4.42",
    "django ~=5.2.3",
    "django-ckeditor ~=6.7.1",
    "django-compression-middleware ~=0.5.0",
    "django-cors-headers ~=4.7.0",
    "django-csp ~=3.7",
    "django-dbbackup ~=4.3.0",
    "django-extensions ~=4.1",
    "django-redis ~=5.4",
    "django-tagify2 ~=1.0.19",
    "djangorestframework ~=3.16.0",
    "djangorestframework-simplejwt ~=5.5.0",
    "drf-spectacular ~=0.28.0",
    "drf-writable-nested ~=0.7",
    "ecs-logging ~=2.2.0",
    "elasticsearch-dsl ~=8.18.0",
    "python-logstash ~=0.4.8",
    "requests ~=2.32.0",
    "rich ~=13.9.4",
    "sentry-sdk ~=2.30.0",
    "django-compressor ~=4.5.1",
    "dynaconf ~=3.2.6",
    "gunicorn ~=23.0.0",
    "django-storages[google] ~=1.14",
    "google-auth ~=2.34",
    "django-jazzmin ~=3.0",
    "pyopenssl ~=25.0",
    "collectfasta ~=3.3.0",
    "gevent ~=24.11",
    "psycopg[binary,pool] ~=3.2",
    "django-prometheus>=2.3.1",
    "django-extra-checks>=0.15.1",
    # Required for ImageField
    "pillow>=11.0.0",
    "vstils>=0.1.0",
    "adrf>=0.1.9",
    "uvicorn-worker>=0.3.0",
    "prometheus-client>=0.21.0",
]

[tool.uv]
default-groups = "all"

[dependency-groups]
dev = [
    "django-watchfiles ~= 1.0",
    "watchdog[watchmedo] ~= 6.0.0",
    "coverage ~=7.6",
    "Faker ~=37.4.0",
    "openapi-spec-validator ~=0.7.1",
    "pdbpp ~=0.11.6",
    "tblib ~=3.0.0",
    "uvicorn ~=0.21",
    "py-spy ~=0.4.0",
    "flower ~=2.0",
    "nplusone ~=1.0",
    "django-silk ~=5.1",
    "mypy ~=1.16.0",
    "locust ~=2.37.10",
    "django-debug-toolbar ~=5.2.0",
    "djangorestframework-stubs ~=3.16.0",
    "ruff ~=0.8",
    "pre-commit ~=4.2.0",
    "factory-boy ~=3.3",
    "django-extensions ~=4.1",
    "debugpy ~=1.8.7",
    "django-stubs ~=5.2.0",
    "playwright>=1.47.0",
    "bandit>=1.7.10",
    "djlint>=1.36.1",
    "memray>=1.14.0",
    "vulture>=2.14",
    "cosmic-ray>=8.4.1",
]

[tool.pycln]
all = true

[tool.mypy]
enable_error_code = [
  "truthy-bool",
  "truthy-iterable",
  "unused-awaitable",
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
]
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
ignore_missing_imports = true
check_untyped_defs = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
warn_unused_configs = true
no_implicit_optional = true
local_partial_types = true
follow_imports = "skip"
exclude = ["tests/*", "migrations", "djangoblog/storage.py", "settings.py"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations"
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py311"

[tool.django-stubs]
django_settings_module="djangoblog.settings"
strict_settings = true

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    "E",
    "F",
    "E4",
    "E7",
    "E9",
    "B",
    "I",
    "DJ",
    "C4", # flake8-datetimez
    "DTZ", # flake8-datetimez
    "PIE800", # flake8-pie
]
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[tool.vulture]
exclude = [
    "*settings.py",
    "*/migrations/*.py",
    "celery.py",
]
ignore_decorators = [
  # Django
  "@receiver",
  "@register.filter",
  "@register.inclusion_tag",
  "@register.simple_tag",
  # django.contrib.admin
  "@admin.action",
  "@admin.display",
  "@admin.register",
  # pytest
  "@pytest.fixture",
]
ignore_names = [
  # Django
  "*Config",  # AppConfig subclasses
  "*Middleware",
  "clean_*",
  "Meta",
  "urlpatterns",
  # django.contrib.admin
  "get_extra",
  "get_fieldsets",
  "has_add_permission",
  "has_change_permission",
  "has_delete_permission",
  "has_view_permission",
  "lookups",
  "list_display",
  "filter_horizontal",
  "readonly_fields",
  "list_filter",
  "search_fields",
  "exclude",
  "ordering",
  "fieldsets"
]
sort_by_size = true

[tool.mutmut]
paths_to_mutate = [ "djangoblog/" ]
tests_dir = [ "tests/" ]
