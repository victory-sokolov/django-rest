[project]
name = "blog-application"
version = "0.1.0"
description = "Django blog"
requires-python = ">=3.12.7,<4.0.0"
authors = [
    { name = "Viktor Sokolov", email = "viktorsokolov.and@gmail.com" },
]
dependencies = [
    "celery ~=5.4",
    "dependency-injector ~=4.42.0",
    "django ~=5.1.2",
    "django-ckeditor ~=6.7.1",
    "django-compression-middleware ~=0.5.0",
    "django-cors-headers ~=4.3.1",
    "django-csp ~=3.7",
    "django-dbbackup ~=4.2.1",
    "django-extensions ~=3.2.3",
    "django-redis ~=5.4",
    "django-tagify2 ~=1.0.19",
    "djangorestframework ~=3.15.2",
    "djangorestframework-simplejwt ~=5.3.1",
    "drf-spectacular ~=0.27.2",
    "drf-writable-nested ~=0.7",
    "ecs-logging ~=2.1.0",
    "elasticsearch-dsl ~=7.4.1",
    "Pillow ~=10.2",
    "psycopg2 ~=2.9.9",
    "python-logstash ~=0.4.8",
    "requests ~=2.32.0",
    "rich ~=13.7.1",
    "sentry-sdk ~=1.40.3",
    "django-compressor ~=4.5.1",
    "dynaconf ~=3.2.6",
    "gunicorn ~=23.0.0",
    "django-storages[google] ~=1.14",
    "google-auth ~=2.34",
    "django-jazzmin ~=3.0",
    "pyopenssl ~=24.2",
    "collectfasta ~=3.2.0",
    "gevent ~=24.2",
    "psycopg[binary,pool] ~=3.2",
    "google-cloud-pubsub ~=2.25",
]

[tool.uv]
dev-dependencies = [
    "django-watchfiles ~= 0.2",
    "watchdog[watchmedo] ~= 5.0.3",
    "coverage ~=7.4.1",
    "Faker ~=23.1.0",
    "openapi-spec-validator ~=0.7.1",
    "pdbpp ~=0.10.3",
    "tblib ~=3.0.0",
    "uvicorn ~=0.21.1",
    "py-spy ~=0.3.14",
    "flower ~=2.0",
    "nplusone ~=1.0",
    "django-silk ~=5.1",
    "mypy ~=1.11",
    "locust ~=2.31",
    "django-debug-toolbar ~=4.4.6",
    "djangorestframework-stubs ~=3.15.0",
    "ruff ~=0.7.0",
    "pre-commit ~=4.0.1",
    "factory-boy ~=3.3",
    "django-extensions ~=3.2",
    "debugpy ~=1.8.5",
    "django-stubs ~=5.1",
    "playwright>=1.47.0",
    "bandit>=1.7.10",
]

[tool.pycln]
all = true

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
ignore_missing_imports = true
check_untyped_defs = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_optional = true
follow_imports = "skip"
exclude = ["djangoblog/tests/*", "migrations"]


[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations"
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py311"

[tool.django-stubs]
django_settings_module="djangoblog.settings"
strict_settings = true

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E", "F", "E4", "E7", "E9", "B", "I", "DJ"]
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]
