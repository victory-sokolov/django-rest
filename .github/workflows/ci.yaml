name: CI-checks

on:
  push:
    branches: [main, master]

  pull_request:
    types: [opened, reopened, synchronize, labeled]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  vm-job:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'EMERGENCY') }}
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: blog
      POSTGRES_PASSWORD: securepassword
      POSTGRES_USER: user
      POSTGRES_FSYNC: off
      PGPORT: 5431
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_ENV: test

    services:
      postgres:
        image: postgres:16.4
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          PGPORT: ${{ env.PGPORT }}
        ports:
          - 5431:5431
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@master
      - uses: ./.github/actions/install-deps

      - name: Run Django Checks
        shell: sh
        run: |
          set -v
          make run-checks

      - name: Test Gunicorn config
        shell: sh
        run: |
          set -v
          uv run gunicorn --check-config djangoblog.wsgi:application --config gunicorn_config.py

      - name: Check migrations
        shell: sh
        run: |
          set -v
          make check-migrations

      - name: Apply migrations
        shell: sh
        run: |
          set -v
          make migrate

      - name: Create .env file from environment variables
        run: |
          # Create .env file with all environment variables from the env section
          env | grep -v '^\s*#' | grep -v '^\s*$' | awk -F= '{print $1 "='\''" $2 "'\''"}' > .env

      - name: Load fixtures
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        run: |
          set -v
          make load-fixtures

      - name: Run tests
        run: |
          set -v
          make test

      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

  security-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Run Bandit Checks
        shell: sh
        run: |
          set -v
          pip install bandit && bandit -r djangoblog/
