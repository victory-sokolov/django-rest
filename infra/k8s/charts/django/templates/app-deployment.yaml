apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: production
  labels:
    io.kompose.service: app
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 4
      maxUnavailable: 2
  template:
    metadata:
      labels:
        io.kompose.service: app
    spec:
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: django
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          envFrom:
            - secretRef:
                name: '{{ .Values.appsecrets }}'
            - configMapRef:
                name: postgres-env
          volumeMounts:
            - name: static-storage
              mountPath: /app/output/static/ # Ensure this is where your Django app writes static files
      volumes:
        - name: static-storage # This should match the name in volumeMounts
          persistentVolumeClaim:
            claimName: static-storage-pvc
